name: CI

on: push

env:
  mainBranchName: master
  semanticReleaseVersion: 19.0.5
  semanticChangelogVersion: 6.0.1
  semanticGitVersion: 10.0.1
  semanticExecVersion: 6.0.3

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        run: |
          echo "GITHUB_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      - name: Display branch name
        run: |
          echo "Branche : ${{ env.GITHUB_BRANCH }}"
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up JDK 17
        uses: actions/setup-java@v3.5.1
        with:
          java-version: 17
          distribution: temurin
      - name: Cache local Maven repository
        uses: actions/cache@v3.0.10
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Import GPG and Prepare build
        run: export GPG_TTY=$(tty) && echo -e "$GPG_PRIVATE_KEY" | gpg --batch --import && chmod +x mvnw
        env:
          GPG_PRIVATE_KEY: ${{ secrets.gpg_private_key }}
      - name: Prepare Maven Settings
        uses: s4u/maven-settings-action@v2.6.0
        with:
          githubServer: false
          properties: |
            [
              {"skipNexusStagingDeployMojo": "false"},
              {"gpg.passphrase": "${{ secrets.GPG_PASSPHRASE }}"},
              {"altSnapshotDeploymentRepository": "snapshots::default::https://oss.sonatype.org/content/repositories/snapshots"},
              {"altReleaseDeploymentRepository": "releases::default::https://oss.sonatype.org/service/local/staging/deploy/maven2"}
            ]
          servers: |
            [{
                "id": "ossrh",
                "username": "${{ secrets.NEXUS_USERNAME }}",
                "password": "${{ secrets.NEXUS_PASSWORD }}"
            }]
      - name: Semantic Prerelease
        if: env.GITHUB_BRANCH != env.mainBranchName
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: ${{ env.semanticReleaseVersion }}
          branches: ${{ env.GITHUB_BRANCH }}
          extra_plugins: |
            @semantic-release/changelog@${{ env.semanticChangelogVersion }}
            @semantic-release/git@{{ env.semanticGitVersion }}
            @semantic-release/exec@{{ env.semanticExecVersion }}
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.CR_TOKEN }}
      - name: Semantic Release
        if: env.GITHUB_BRANCH == env.mainBranchName
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: ${{ env.semanticReleaseVersion }}
          branches: ${{ env.mainBranchName }}
          extra_plugins: |
            @semantic-release/changelog@${{ env.semanticChangelogVersion }}
            @semantic-release/git@{{ env.semanticGitVersion }}
            @semantic-release/exec@{{ env.semanticExecVersion }}
        env:
          GITHUB_TOKEN: ${{ secrets.CR_TOKEN }}
