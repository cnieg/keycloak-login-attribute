plugins {
    id 'java'
    id 'de.gliderpilot.semantic-release' version '1.4.2'
    id 'maven-publish'
}

group = "fr.cnieg.keycloak"

/*
def setExtValue(String property, String systemenv) {
    project.ext."$property" = project.hasProperty(property) ? project.getProperty(property) : System.getenv(systemenv)
}

setExtValue('ghToken', 'GH_TOKEN')

*/

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.keycloak:keycloak-server-spi:16.0.0'
    compileOnly 'org.keycloak:keycloak-server-spi-private:16.0.0'
    compileOnly 'org.keycloak:keycloak-services:16.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}

test {
    useJUnitPlatform()
}

java.sourceCompatibility = JavaVersion.VERSION_11
tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

/*
java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

release {
}

semanticRelease {
    repo {
        ghToken = project.ext.ghToken
        //releaseAsset jar, contentType: 'application/zip'
        releaseAsset sourcesJar, label: 'the sources of the project', contentType: 'application/zip'
        releaseAsset javadocJar, label: 'the javadoc of the project', contentType: 'application/zip'
    }
}
*/
